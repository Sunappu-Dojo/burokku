@use '../../variables' as *;

// Button

.menu__toggle {
  /*
   * The same distance (this custom property) is used for button padding and
   * as negative margin in order to maintain visual alignment with other
   * other items (blocks navigation, menu settingsâ€¦).
   */
  --menu-toggle-x-padding: 1rem;

  margin-inline: 2rem calc(var(--menu-toggle-x-padding) * -1);
  padding: .3rem var(--menu-toggle-x-padding);

  // Lower button opacity when not on it or when the menu is closed.

  transition: .5s $in-out-quad;
  transition-property: opacity, visibility;

  opacity: calc(1 * var(--menu-visible, var(--menu-toggle-opacity, 0)));

  &:is(:hover, :focus) {
    --menu-toggle-opacity: 1;
  }

  &:not(.menu__toggle--visible) {
    visibility: hidden;
  }
}

.menu__toggle--visible {
  --menu-toggle-opacity: .6; // same value as settings button (e.g. sound)
}

// animates the button icon when it appears.
.menu__toggle--glow {
  --menu-toggle-glowing: running;
  animation: maintain-opacity-1 1s 5; // force `opacity: 1` during animation
}

// Icon

.menu__toggleIcon {
  @media (--motion) {
    animation: color-glow 1s 5 var(--menu-toggle-glowing, paused);
  }
}
